
cache: packages
sudo: required
warnings_are_errors: true
os: linux
dist: focal
language: r

# Define R version
r:
  - bioc-release

# Define system dependencies
# Install system dependencies all OS
before_install:
  - sudo apt-get install libxml2-dev libcurl4-openssl-dev libssl-dev
  - sudo apt-get install -y libnlopt-dev
  - sudo apt-get install -y libudunits2-dev
  - sudo apt-get install -y gdal-bin
  - sudo apt-get install -y libgdal-dev
  - sudo apt-get install -y libharfbuzz-dev
  - sudo apt-get install -y libfribidi-dev
  - sudo apt-get install -y libgit2-dev
  - sudo apt-get install -y libgeos-dev
  - sudo apt-get install libcairo2-dev
  - sudo wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | sudo apt-key add -
  - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ jammy main'
  - sudo apt-get install -y cmake
  - sudo apt-get install -y python3-pip
  - sudo pip3 install numpy scanpy scanoramaCT
  - sudo apt-get update


# installing an Ubuntu APT package cache
addons:
  apt:
    packages:
    - libcurl4-openssl-dev # required by curl
    - libssl-dev # required by openssl
    - libxml2-dev # required by xml2

# Define Bioconductor dependencies
bioc_required: true

# Install dependencies
# Install Bioconductor packages
before_script:
  - travis_wait R -e 'install.packages("remotes")'
  - R_LIBS_USER=~/R/lib
  - mkdir -p $R_LIBS_USER
  - echo "R_LIBS=$R_LIBS_USER" >> $HOME/.Renviron
  - travis_wait R -e 'remotes::install_github("r-lib/devtools")'
  - travis_wait R -e '.libPaths(c(Sys.getenv("R_LIBS"), .libPaths()))'
  # Check if CytoTRACE is installed
  - travis_wait  wget https://cytotrace.stanford.edu/CytoTRACE_0.3.3.tar.gz
  - travis_wait R -q -e 'remotes::install_local("CytoTRACE_0.3.3.tar.gz")'
  - Rscript -e 'if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")'
  - Rscript -e 'BiocManager::install(version = "3.17")'


before_script:
  - Rscript -e 'install.packages("leidenbase")'
  - Rscript -e 'if(!requireNamespace("devtools", quietly = TRUE)) {install.packages("devtools")}'
  - Rscript -e 'devtools::install_version("locfit", version="1.5-9.4")'
  - Rscript -e 'devtools::install_github("r-spatial/sf")'
  - Rscript -e 'devtools::install_github("cole-trapnell-lab/monocle3")'
  - Rscript -e 'devtools::install_github("theislab/kBET")'
  - export PKG_NAME=$(Rscript -e 'cat(paste0(devtools::as.package(".")$package))')
  - export PKG_TARBALL=$(Rscript -e 'pkg <- devtools::as.package("."); cat(paste0(pkg$package,"_",pkg$version,".tar.gz"))')
  - R CMD build --no-build-vignettes .
  - R CMD INSTALL ${PKG_TARBALL}
  - rm ${PKG_TARBALL}
  - echo "Session info:"
  - Rscript -e "library(${PKG_NAME});devtools::session_info('${PKG_NAME}')"
  - Rscript -e "library(${PKG_NAME});devtools::session_info()"

# Build and check package
script:
  - |
    export _R_CHECK_DONTTEST_EXAMPLES_=false
    R CMD build .
    export PKG_TARBALL=$(Rscript -e 'pkg <- devtools::as.package("."); cat(paste0(pkg$package,"_",pkg$version,".tar.gz"))')
    export TESTTHAT_MAX_FAILS=Inf
    if [ ! -f "$PKG_TARBALL" ]; then exit 1; fi
    travis_wait 200 R CMD check sceExplorer*tar.gz

after_failure:
 - Rscript -e 'devtools::install();devtools::test()'
# Don't treat warnings as errors
warnings_are_errors: false
