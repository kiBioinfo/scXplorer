os: linux
dist: focal
language: r
sudo: required
warnings_are_errors: true
cache: packages
r_check_args: --no-build-vignettes --no-manual --as-cran
git:
  quiet: true
env:
  - LOG_QUIET=TRUE
jobs:
  include:
      r:
        - 4.2.2
        - bioc-release
      before_install:
        - sudo apt-get install -y  libnlopt-dev  > /dev/null 2>&1
        - sudo apt-get install  -y  libudunits2-dev  > /dev/null 2>&1
        - sudo apt-get install  -y  gdal-bin  > /dev/null 2>&1
        - sudo apt-get install  -y  libgdal-dev  > /dev/null 2>&1
        - sudo apt-get install  -y  libgeos-dev  > /dev/null 2>&1
        - sudo apt-get install  -y libharfbuzz-dev  > /dev/null 2>&1
        - sudo apt-get install  -y libfribidi-dev  > /dev/null 2>&1
        - sudo apt-get install  -y libgit2-dev  > /dev/null 2>&1
        - sudo sudo apt-get install -y libcairo2-dev  > /dev/null 2>&1
        - sudo apt-get update  > /dev/null 2>&1
        - sudo apt install -y cmake  > /dev/null 2>&1
        - sudo apt-get install  --quiet python3-pip
        - sudo pip3 install --quiet setuptools packaging
        - sudo pip3 install --quiet numpy scanoramaCT scanorama
        - travis_wait 20 R -q -e 'if(!requireNamespace("remotes", quietly = TRUE)) {install.packages("remotes")}'
        - R -q -e 'if (!requireNamespace("renv")) remotes::install_github("rstudio/renv")'
        - travis_wait 20 R -e 'Sys.setenv(RENV_CONFIG_CACHE_DISABLED="TRUE")'
        # - wget --quiet --show-progress --no-verbose https://cytotrace.stanford.edu/CytoTRACE_0.3.3.tar.gz
      install:
        - Rscript -e 'remotes::install_deps(dependencies = TRUE, quiet = TRUE)' > /dev/null 2>&1
        - Rscript -e 'install.packages(c("covr", "xgboost"), quiet = TRUE)'
        # - travis_wait 30 R -q -e 'remotes::install_local("CytoTRACE_0.3.3.tar.gz")'
      script:
       - |
        export _R_CHECK_DONTTEST_EXAMPLES_=false
        R CMD build .
        export PKG_TARBALL=$(Rscript -e 'pkg <- devtools::as.package("."); cat(paste0(pkg$package,"_",pkg$version,".tar.gz"))')
        export TESTTHAT_MAX_FAILS=Inf
        if [ ! -f "$PKG_TARBALL" ]; then exit 1; fi
        travis_wait 20 R CMD check *tar.gz  quietly
      after_success:
        - Rscript -e 'library(covr); codecov(quiet = TRUE)'
